name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Descarga el código del repo
    - name: Checkout code
      uses: actions/checkout@v4

    # 2️⃣ Instala JDK 21
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # 3️⃣ Cache para dependencias Maven
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # 4️⃣ Compilar y testear con Maven
    - name: Build with Maven
      run: mvn clean install --no-transfer-progress

    # 5️⃣ (Opcional) Analizar con SonarQube
    # - name: SonarQube Scan
    #   uses: sonarsource/sonarqube-scan-action@master
    #   with:
    #     projectBaseDir: .
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     SONAR_HOST_URL: https://sonarcloud.io

    # 6️⃣ Construir imagen Docker
    - name: Build Docker image
      run: docker build -t my-spring-patterns-app .

    # 7️⃣ (Opcional) Push Docker a Docker Hub
    # - name: Docker Login
    #   run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # - name: Push Docker image
    #   run: docker push my-spring-patterns-app

    # 8️⃣ (Opcional) Desplegar a Kubernetes (ej: GKE/OpenShift)
    # - name: Deploy to Kubernetes
    #   run: kubectl apply -f k8s/deployment.yaml
